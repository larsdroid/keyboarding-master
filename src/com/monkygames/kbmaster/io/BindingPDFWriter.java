/* 
 * See COPYING in top-level directory.
 */
package com.monkygames.kbmaster.io;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Creates a PDF of the keybindings.
 * @version 1.0
 */
public class BindingPDFWriter{

// ============= Class variables ============== //
    /**
     * Writes a PDF file of the images passed in.
     * @param awtImages the images to write to a pdf file.
     * @param name the title of the pdf document.
     * @param path the path to the file to write to.
     */
    public BindingPDFWriter(java.awt.Image awtImage[], String name, String path){
	try {
	    Rectangle a4rot = PageSize.A4.rotate();
	    a4rot.setBackgroundColor(BaseColor.WHITE);
	    Document document = new Document(a4rot);
	    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(path));
	    document.open();
	    document.addTitle(name);
	    document.addCreationDate();
	    document.addAuthor("monky games");
	    document.addCreator("Autogenerated");
	    document.addKeywords("keyboard mouse gaming");
	    for(int i = 0; i < awtImage.length; i++){
		Image image = Image.getInstance(writer,awtImage[i],1.0f);
		image.setAlignment(Element.ALIGN_CENTER);
		document.add(image);
	    }
	    document.close();
	} catch (BadElementException ex) {
	    Logger.getLogger(BindingPDFWriter.class.getName()).log(Level.SEVERE, null, ex);
	} catch (IOException ex) {
	    Logger.getLogger(BindingPDFWriter.class.getName()).log(Level.SEVERE, null, ex);
	} catch (DocumentException ex) {
	    Logger.getLogger(BindingPDFWriter.class.getName()).log(Level.SEVERE, null, ex);
	}
    }
// ============= Constructors ============== //
// ============= Public Methods ============== //
// ============= Protected Methods ============== //
// ============= Private Methods ============== //
// ============= Implemented Methods ============== //
// ============= Extended Methods ============== //
// ============= Internal Classes ============== //
// ============= Static Methods ============== //

}
/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ts=8 sts=4 sw=4 noexpandtab
 */
